import { z } from "zod";

export const condOwnersSchema = z.array(
  z.object({
    strName: z.string(),
    strItemDef: z.string(),
    strType: z.string(),
    strLoot: z.union([z.null(), z.string()]).optional(),
    aInteractions: z.array(z.string()).optional(),
    aStartingConds: z.array(z.string()),
    mapCondTolerance: z.array(z.any()).optional(),
    mapPoints: z.array(z.string()).optional(),
    aUpdateCommands: z.array(z.string()).optional(),
    mapGUIPropMaps: z.union([z.null(), z.array(z.string())]).optional(),
    strPortraitImg: z.union([z.null(), z.string()]).optional(),
    jsonPI: z.union([z.null(), z.string()]).optional(),
    strNameShort: z.string().optional(),
    strAudioEmitter: z.union([z.null(), z.string()]).optional(),
    strNameFriendly: z.string().optional(),
    aStartingCondRules: z.array(z.string()).optional(),
    bSaveMessageLog: z.boolean().optional(),
    aSlotsWeHave: z.array(z.string()).optional(),
    mapSlotEffects: z.array(z.string()).optional(),
    aTickers: z.array(z.string()).optional(),
    strDesc: z.string().optional(),
    bSlotLocked: z.boolean().optional(),
    mapChargeProfiles: z.array(z.string()).optional(),
    strContainerCT: z.union([z.null(), z.string()]).optional(),
    nContainerHeight: z.number().int().optional(),
    nContainerWidth: z.number().int().optional(),
    mapAltItemDefs: z.array(z.string()).optional(),
    nStackLimit: z.number().int().optional(),
    mapAltSlotImgs: z.array(z.string()).optional(),
    strNameDesc: z.string().optional(),
    strPaperDollImg: z.string().optional(),
    aComponents: z.array(z.string()).optional(),
  }),
);
export type CondOwnersSchema = z.infer<typeof condOwnersSchema>;
