* {
    box-sizing: border-box;
}

:root {
    /* PROPS SET FROM SCRIPT START */
    --btn-press-anim-duration: 0ms;
    --toggle-col: gray;
    /* PROPS SET FROM SCRIPT END */

    --tileset-base-size: 64px;
}

body {
    --text-color: hsl(0, 0%, 95%);
    --dock-area-size: 10rem;
    
    color: var(--text-color);
    font-family: 'Comme', 'sans-serif';
    
    margin: 0;
    overflow: hidden;

    display: grid;
    grid-template-columns: var(--dock-area-size) auto var(--dock-area-size);
    grid-template-rows: var(--dock-area-size) auto var(--dock-area-size);;
    grid-column-gap: 0px;
    grid-row-gap: 0px;

    /* display: flex; */
    /* justify-content: center; */
    /* align-items: center; */
    background-color: hsl(0, 0%, 15%);

    height: 100vh;
}

#canvas {
    grid-area: 2 / 2 / 2 / 2; 
    image-rendering: pixelated;

	align-self: baseline;
	justify-self: center;
    
    &:not(.initialized) {        
        /* temp props used for canvas alignment */
        width: 100%;
        height: 100%;
    }

    &.initialized {
        border: 1px dashed hsl(0, 0%, 40%);
    }
}

.gui-container {
    display: flex;
    gap: 2rem;

    border: 1px solid gray;
}

.gui-container.dock-top { 
    grid-area: 1 / 2 / 1 / 2; 
    flex-direction: row; 
    /* vertical */
    align-items: flex-start; 
    
    margin: 1rem 0;
    border-radius: 1rem / 1.5rem;
    padding: 1.2rem 0.9rem;
    padding-bottom: .5rem;

    height: fit-content;
    align-self: end;
    
    box-shadow: -2px -2px 1px hsl(0, 0%, 80%),
        2px 2px 4px hsl(0, 0%, 10%);

    & > .button-section { 
        flex-direction: row; 
    } 
}
/* .gui-container.dock-right  { grid-area: 2 / 3 / 3 / 4; } */
/* .gui-container.dock-bottom { grid-area: 3 / 2 / 4 / 3; } */
/* .gui-container.dock-left   { grid-area: 2 / 1 / 3 / 2; } */

.button-section {
    display: flex;
    gap: 1rem;
}

button:not(.no-make-style) {
    all: unset;

    --btn-padding: 0.6rem;
    --btn-sh-active-base: inset 1px 1px 2px hsl(0, 0%, 5%, 0.7),
        inset -1px -1px 1px hsl(0, 0%, 95%, 0.2);
    --btn-scale-onpress: 95%;
    --btn-size-to-border-radius-ratio: 3;
    --btn-size: 3.25rem;

    cursor: pointer;

    width: var(--btn-size);
    height: var(--btn-size);
    border-radius: calc(var(--btn-size) / var(--btn-size-to-border-radius-ratio));

    display: flex;
    justify-content: center;
    align-items: center;
    user-select: none;
    position: relative;

    padding: var(--button-padding);
    background-color: #31302D;
    /* overflow: hidden; */
    
    border: none;

    box-shadow: -1px -1px 0px hsl(0, 0%, 95%),
    1px 1px 2px hsl(0, 0%, 0%, .3);
    
    transition: all var(--btn-press-anim-duration) ease;

    & > .icon {
        width: calc(100% - var(--btn-padding) * 2);
        height: auto;
    }

    &.active,
    &:active {
        box-shadow: var(--btn-sh-active-base);
        transform: scale(var(--btn-scale-onpress));
    }
}

.button-label-wrapping {
    text-align: center;
}

.button-label-text {
    display: inline-block;
    margin-top: .35rem;
    font-size: 1em;
    font-weight: bold;
    color: hsl(0, 0%, 55%);
    user-select: none;
}

/* double selector to take precedence over the :not selector on the button  */
.toggle-button.toggle-button:active,
.toggle-button.toggle-button.toggled {
	--sh-size: 0px;
	--sh-blur: 12px;
	--sh-spread: 4px;
	--sh-opacity: 17%;
    box-shadow:
        var(--btn-sh-active-base),
        inset var(--sh-size) 0 var(--sh-blur) var(--sh-spread) color-mix(in srgb, var(--toggle-col) var(--sh-opacity), transparent),
        inset calc(var(--sh-size) * -1) 0 var(--sh-blur) var(--sh-spread) color-mix(in srgb, var(--toggle-col) var(--sh-opacity), transparent),
        inset 0 var(--sh-size) var(--sh-blur) var(--sh-spread) color-mix(in srgb, var(--toggle-col) var(--sh-opacity), transparent),
        inset 0 calc(var(--sh-size) * -1) var(--sh-blur) var(--sh-spread) color-mix(in srgb, var(--toggle-col) var(--sh-opacity), transparent);

    transform: scale(var(--btn-scale-onpress));

    & > .icon {
        /* toggle col for a black icon, but achieved with a filter */
        filter: invert(83%) sepia(47%) saturate(7081%) hue-rotate(342deg) brightness(101%) contrast(99%) blur(1px);
    }
}

.icon {
    pointer-events: none;
}

.icon.invert {
    filter: invert(53%);
}

.tile-button {
    
}

.tile-selection-window {
    --theme-col: var(--toggle-col);
    --bg-col: color-mix(in srgb, var(--theme-col) 50%, black);
    --border: 5px solid var(--theme-col);
    --tile-selection-win-right-shadow-size: 10px;
    --tile-selection-win-right-offset: 2rem;
    --tile-selection-win-right-offset-with-shadow: calc(var(--tile-selection-win-right-shadow-size) + var(--tile-selection-win-right-offset));

    position: absolute;
    z-index: 10;
    top: 5rem;

    display: grid;
    grid-template-areas:
        "header     header"
        "sidebar    explorer"
        "sidebar    explorer";

    background-color: var(--bg-col);
    border: var(--border);

    box-shadow: 0 0 6px 3px color-mix(in srgb, var(--theme-col), transparent 75%),
        10px 0 12px color-mix(in srgb, var(--theme-col), transparent 75%);

    transition: transform 150ms ease;

    &:not(.active) {
        transform: translateX(100%);
        right: calc(var(--tile-selection-win-right-offset-with-shadow) * -1);
        /* visibility: hidden; */
    }
    &.active {
        right: var(--tile-selection-win-right-offset);
    }
}

.tile-selection-window > .header {
    grid-area: header;

    padding: 0.2rem .5rem;

    font-family: 'Jura';
    font-size: x-large;
    font-weight: bold;

    border-bottom: var(--border);
    text-align: center;
}

.tile-selection-window > .sidebar {
    grid-area: sidebar;

    display: grid;
    /* grid-template-columns: 7rem; */
    /* grid-auto-rows: auto 2rem; */
    grid-template-areas:
        "sidebar-folders"
        "sidebar-upload";

    background-color: color-mix(in srgb, var(--bg-col) 75%, black);
    border-right: var(--border);
}

.tile-selection-window > .sidebar > .sidebar-folders {
    grid-area: sidebar-folders;

    display: flex;
    flex-direction: column;

    padding: 0.4rem 0;
}

.sidebar-folders > button.folder {
    all: unset;

    user-select: none;
    cursor: pointer;
    
    display: inline-block;
    padding: 0.2rem 0.5rem;
    text-align: center;

    &.toggled {
        background-color: var(--theme-col);
    }
}

@keyframes sidebar-upload-bracket-flicker {
    from {
        opacity: 0;
    }

    to {
        opacity: 1;
    }
}

.tile-selection-window > .sidebar > .sidebar-upload {
    grid-area: sidebar-upload;

    visibility: hidden;

    border-top: var(--border);
    
    display: flex;
    justify-content: center;
    align-items: center;

    width: 100%;
    aspect-ratio: 1;

    font-size: large;
    font-weight: bold;

    & .bracket {
        user-select: none;
        font-size: x-large;

        animation: sidebar-upload-bracket-flicker 1000ms infinite steps(2, jump-none);
    }
}


.tile-selection-window > .explorer {
    grid-area: explorer;

    display: grid;
    grid-template-columns: repeat(3, 1fr);
    gap: 2rem;

    height: 30rem;
    overflow: auto;

    padding: 1rem;

    background-color: color-mix(in srgb, var(--bg-col) 90%, white);
}

.explorer .tileset-label-wrapping {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 0.5rem;

    max-width: 12rem;

    outline: 1px dashed transparent;
    outline-offset: 7px;
    transition: 
        outline 100ms ease-in,
        outline-offset 500ms ease-in;

    &:hover {
        outline: 1px dashed white;
        outline-offset: 5px;
        
        transition: 
        outline 100ms ease-out,
        outline-offset 200ms ease-out;
    }
    
    &.selected {
        transition: outline 0ms, outline-offset 0ms;
        outline: var(--border);
        outline-offset: 5px;
        
        &:hover {
            transition: outline 0ms, outline-offset 0ms;
            outline: var(--border);
            outline-offset: 5px;
        }
    }


    & > .label {
        word-break: break-all;
        font-family: monospace;
        font-size: 1.1em;
        cursor: auto;
    }

    & > .tileset,
    & > .tileset-placeholder {
        aspect-ratio: 1;
        width: calc(2 * var(--tileset-base-size));
        height: auto;
        user-select: none;
    }
    
    & > .tileset {
        image-rendering: pixelated;
        cursor: pointer;

        background: repeating-conic-gradient(hsl(0, 0%, 25%, 0.50) 0 25%, #0000 0 50%) 50% / 20px 20px;
        background-color: white;
    }

    & > .tileset-placeholder {
        background-color: color-mix(in srgb, var(--bg-col) 80%, black);
    }
}